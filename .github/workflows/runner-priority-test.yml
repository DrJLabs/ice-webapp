name: Runner Priority and Fallback Test

on:
  workflow_dispatch:
    inputs:
      test_type:
        description: 'Type of runner test to perform'
        required: false
        default: 'all'
        type: choice
        options:
          - 'all'
          - 'repository'
          - 'organization'
          - 'specialized'
          - 'diagnosis'

# Based on GitHub Documentation June 2025:
# Runner precedence: repository ‚Üí organization ‚Üí enterprise
# https://docs.github.com/en/actions/hosting-your-own-runners/managing-self-hosted-runners/about-self-hosted-runners
# NOTE: This is a diagnostic workflow - run manually only

jobs:
  test-repository-runners:
    name: Test Repository-Level Runners
    runs-on: [self-hosted, linux, repository]
    timeout-minutes: 5
    continue-on-error: true
    steps:
      - name: Repository runner test
        run: |
          echo "‚úÖ Repository-level runner active"
          echo "Runner name: $RUNNER_NAME"
          echo "Labels: ${{ toJson(runner.labels) }}"
          echo "Priority: Highest (repository-level)"
          
  test-organization-runners:
    name: Test Organization-Level Runners  
    runs-on: [self-hosted, linux]
    timeout-minutes: 5
    needs: test-repository-runners
    if: always()
    steps:
      - name: Organization runner test
        run: |
          echo "‚úÖ Organization-level runner active"
          echo "Runner name: $RUNNER_NAME"
          echo "Labels: ${{ toJson(runner.labels) }}"
          echo "Priority: Medium (organization-level)"
          echo "Repository: ${{ github.repository }}"
          echo "Organization: ${{ github.repository_owner }}"
          
      - name: Test runner group access
        run: |
          echo "Testing runner group access patterns..."
          echo "Event: ${{ github.event_name }}"
          echo "Ref: ${{ github.ref }}"
          echo "Actor: ${{ github.actor }}"
          
  test-specialized-labels:
    name: Test Specialized Organization Runners
    runs-on: [self-hosted, linux, quality]
    timeout-minutes: 5
    continue-on-error: true
    steps:
      - name: Specialized runner test
        run: |
          echo "‚úÖ Specialized organization runner active"
          echo "Runner name: $RUNNER_NAME"
          echo "Labels: ${{ toJson(runner.labels) }}"
          echo "Specialization: Quality assurance runner"
          
  test-fallback-basic:
    name: Test Basic Self-Hosted Fallback
    runs-on: [self-hosted]
    timeout-minutes: 5
    needs: [test-repository-runners, test-organization-runners]
    if: always()
    steps:
      - name: Basic fallback test
        run: |
          echo "‚úÖ Basic self-hosted runner active"
          echo "Runner name: $RUNNER_NAME"
          echo "Labels: ${{ toJson(runner.labels) }}"
          echo "Priority: Fallback (any available self-hosted)"
          
  runner-diagnosis:
    name: Runner Environment Diagnosis
    runs-on: [self-hosted, linux]
    timeout-minutes: 5
    if: always()
    steps:
      - name: Comprehensive runner diagnosis
        run: |
          echo "üîç Runner Environment Diagnosis"
          echo "=============================="
          echo "Runner Name: $RUNNER_NAME"
          echo "Runner OS: $RUNNER_OS"
          echo "Architecture: $(uname -m)"
          echo "Hostname: $(hostname)"
          echo "User: $(whoami)"
          echo "Working Directory: $(pwd)"
          echo "Available Labels: ${{ toJson(runner.labels) }}"
          echo ""
          echo "System Information:"
          echo "OS Release: $(cat /etc/os-release | head -2)"
          echo "CPU Info: $(nproc) cores"
          echo "Memory: $(free -h | grep Mem)"
          echo "Disk Space: $(df -h / | tail -1)"
          echo ""
          echo "GitHub Context:"
          echo "Repository: ${{ github.repository }}"
          echo "Organization: ${{ github.repository_owner }}"
          echo "Event: ${{ github.event_name }}"
          echo "Ref: ${{ github.ref }}"
          echo "SHA: ${{ github.sha }}"
          echo "Actor: ${{ github.actor }}"
          echo "Run ID: ${{ github.run_id }}"
          echo "Run Number: ${{ github.run_number }}"
          
      - name: Test GitHub API access from runner
        run: |
          echo "üîó Testing GitHub API connectivity..."
          curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
               -H "Accept: application/vnd.github.v3+json" \
               "https://api.github.com/repos/${{ github.repository }}" \
               | jq -r '.full_name // "API Error"' || echo "API access failed"
               
  workflow-summary:
    name: Workflow Execution Summary
    runs-on: [self-hosted, linux]
    timeout-minutes: 5
    needs: [test-repository-runners, test-organization-runners, test-specialized-labels, test-fallback-basic, runner-diagnosis]
    if: always()
    steps:
      - name: Execution summary
        run: |
          echo "üìä Workflow Execution Summary"
          echo "============================"
          echo "Repository runners: ${{ needs.test-repository-runners.result }}"
          echo "Organization runners: ${{ needs.test-organization-runners.result }}"
          echo "Specialized runners: ${{ needs.test-specialized-labels.result }}"
          echo "Fallback runners: ${{ needs.test-fallback-basic.result }}"
          echo "Diagnosis: ${{ needs.runner-diagnosis.result }}"
          echo ""
          if [[ "${{ needs.test-organization-runners.result }}" == "success" ]]; then
            echo "‚úÖ Organization-level runners are working correctly"
          else
            echo "‚ùå Organization-level runners need investigation"
            echo "   Check runner groups and repository access"
          fi 