# .github/workflows/testing.yml
name: Testing Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  unit-tests:
    name: Unit Tests
    runs-on: ubuntu-latest
    timeout-minutes: 10
    env:
      CODACY_ACCOUNT_TOKEN: ${{ secrets.CODACY_ACCOUNT_TOKEN }}
      CODACY_PROJECT_TOKEN: ${{ secrets.CODACY_PROJECT_TOKEN }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.19.1'
          cache: 'pnpm'

      - name: Install pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 8
          run_install: false

      - name: Debug versions
        run: |
          node --version
          npm --version
          pnpm --version

      - name: Install dependencies
        run: pnpm install --no-frozen-lockfile

      - name: Run unit tests with coverage
        run: pnpm run test:coverage

      - name: Upload coverage to Codacy
        if: success()
        run: |
          cat tools/.codacy-tokens
          export CODACY_PROJECT_TOKEN="${{ secrets.CODACY_PROJECT_TOKEN }}"
          export CODACY_ACCOUNT_TOKEN="${{ secrets.CODACY_ACCOUNT_TOKEN }}"
          curl -Ls https://coverage.codacy.com/get.sh | bash -s -- report -r ./coverage/lcov.info
        continue-on-error: true

      - name: Upload Coverage Reports
        if: success()
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./coverage/lcov.info
          flags: unittests
          fail_ci_if_error: false

  type-check:
    name: TypeScript Type Check
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.19.1'
          cache: 'pnpm'

      - name: Install pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 8
          run_install: false

      - name: Install dependencies
        run: pnpm install --no-frozen-lockfile

      - name: Run TypeScript type check
        run: pnpm run type-check

  lint:
    name: ESLint Check
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.19.1'
          cache: 'pnpm'

      - name: Install pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 8
          run_install: false

      - name: Install dependencies
        run: pnpm install --no-frozen-lockfile

      - name: Run ESLint
        run: pnpm run lint

  e2e-tests:
    name: E2E Tests
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.19.1'
          cache: 'pnpm'

      - name: Install pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 8
          run_install: false

      - name: Install dependencies
        run: |
          # Ensure clean installation
          rm -rf node_modules/.cache || true
          pnpm install --no-frozen-lockfile
          # Verify Playwright installation
          ls -la node_modules/@playwright/test/ || echo "Playwright not found in node_modules"

      - name: Install system dependencies for Playwright
        run: |
          # Install system dependencies for Playwright browsers
          sudo apt-get update
          sudo apt-get install -y \
            libasound2t64 \
            libatk-bridge2.0-0 \
            libdrm2 \
            libxkbcommon0 \
            libxcomposite1 \
            libxdamage1 \
            libxrandr2 \
            libgbm1 \
            libxss1 \
            libasound2-dev \
            libatspi2.0-0 \
            libgtk-3-0 \
            libgdk-pixbuf2.0-0 \
            libcairo-gobject2 \
            libpango-1.0-0 \
            libharfbuzz0b \
            libgssapi-krb5-2 \
            libgtk-4-1 \
            libwoff1 \
            libopus0 \
            libwebpdemux2 \
            libharfbuzz-icu0 \
            libhyphen0 \
            libflite1 \
            libegl1 \
            libevdev2 \
            libgles2 \
            gstreamer1.0-libav || true
          echo "✅ System dependencies installed"

      - name: Install Playwright browsers
        run: |
          # Force clean any conflicting Playwright installations
          rm -rf ~/.cache/ms-playwright* || true
          # Install Playwright browsers without system deps (already installed above)
          npx playwright install chromium
          # Verify browser installation
          npx playwright --version
          echo "✅ Playwright browsers installed successfully"

      - name: Build Application
        run: pnpm run build

      - name: Run E2E tests
        run: |
          # Debug package versions
          echo "=== Playwright Environment Debug ==="
          npx playwright --version
          npm list @playwright/test 2>/dev/null || echo "No @playwright/test found"
          npm list playwright 2>/dev/null || echo "No playwright found"
          echo "Node.js: $(node --version)"
          echo "=== End Debug ==="
          # Run E2E tests
          pnpm run test:e2e
        env:
          PLAYWRIGHT_TEST_BASE_URL: http://localhost:3000

      - name: Upload Test Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30
