# .github/workflows/codacy.yml
name: Codacy Security and Quality Analysis

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

env:
  NODE_VERSION: '20.19.1'
  PNPM_VERSION: '10'

jobs:
  codacy-analysis:
    name: Codacy Analysis
    runs-on: [self-hosted, linux, quality, analysis]
    timeout-minutes: 15
    env:
      CODACY_ACCOUNT_TOKEN: ${{ secrets.CODACY_ACCOUNT_TOKEN }}
      CODACY_PROJECT_TOKEN: ${{ secrets.CODACY_PROJECT_TOKEN }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'pnpm'

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: ${{ env.PNPM_VERSION }}
          run_install: false

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV
          
      - name: Setup pnpm cache
        uses: actions/cache@v4
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Debug versions
        run: |
          node --version
          npm --version
          pnpm --version
          
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
        
      - name: Generate test coverage
        run: pnpm run test:coverage
        continue-on-error: true
        
      - name: Run Codacy Analysis using CLI
        run: |
          # Use the codacy MCP server if available, otherwise use CLI action
          if command -v codacy-analysis-cli &> /dev/null; then
            codacy-analysis-cli analyze --verbose --output results.sarif --format sarif
          else
            echo "Codacy CLI not found, skipping local analysis"
          fi
        continue-on-error: true
          
      - name: Upload coverage to Codacy
        if: success() && env.CODACY_PROJECT_TOKEN
        run: |
          curl -Ls https://coverage.codacy.com/get.sh | bash -s -- report -r ./coverage/lcov.info
        continue-on-error: true

  security:
    name: Security Scan
    runs-on: [self-hosted, linux, security, scan]
    timeout-minutes: 15
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'pnpm'

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: ${{ env.PNPM_VERSION }}
          run_install: false
          
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
        
      - name: Security audit
        run: pnpm audit --audit-level moderate
        continue-on-error: true
        
      - name: Install Trivy
        run: |
          if ! command -v trivy &> /dev/null; then
            echo "Installing Trivy..."
            wget -qO- https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/install.sh | sh -s -- -b /tmp/trivy
            export PATH="/tmp/trivy:$PATH"
            echo "/tmp/trivy" >> $GITHUB_PATH
          fi
        
      - name: Run Trivy vulnerability scanner
        run: |
          export PATH="/tmp/trivy:$PATH"
          trivy fs --format sarif --output trivy-results.sarif --severity CRITICAL,HIGH . || echo "Trivy scan completed"
        continue-on-error: true
          
      - name: Upload Trivy scan results to GitHub Security tab
        if: always() && hashFiles('trivy-results.sarif') != ''
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: 'trivy-results.sarif'
        continue-on-error: true 