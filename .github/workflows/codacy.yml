# .github/workflows/codacy.yml
name: Codacy Security and Quality Analysis

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  codacy-analysis:
    name: Codacy Analysis
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # Install pnpm first
      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9
          run_install: false

      # Setup Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '16.x'
          cache: 'pnpm'

      # Check package.json
      - name: Check package.json
        run: cat package.json

      # Check pnpm settings
      - name: Check pnpm settings
        run: pnpm config list

      # Install dependencies
      - name: Install dependencies
        run: pnpm install --no-frozen-lockfile

      # Type checking
      - name: Type check
        run: pnpm run type-check

      # Linting
      - name: Lint
        run: pnpm run lint

      # Tests
      - name: Run tests
        run: pnpm run test --coverage

      # Prepare Codacy runtime
      - name: Prepare Codacy
        run: ./tools/codacy-runtime.sh

      # Configure Codacy quality gates
      - name: Configure Codacy Quality Gates
        run: pnpm run codacy:setup-all

      # Run Codacy Analysis
      - name: Codacy Static Analysis
        uses: codacy/codacy-analysis-cli-action@master
        with:
          project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}
          verbose: true
          output: results.sarif
          format: sarif
          gh-code-scanning-compat: true
          max-allowed-issues: 0

      # Upload SARIF file
      - name: Upload Codacy SARIF to GitHub
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: results.sarif

      # Setup code coverage report upload
      - name: Configure Codacy Quality Gates
        run: pnpm run codacy:setup-coverage

      # Upload coverage report
      - name: Upload coverage
        run: pnpm run coverage:upload

  security:
    name: security
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      # Install pnpm first
      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9
          run_install: false

      # Setup Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '16.x'
          cache: 'pnpm'

      # Check package.json
      - name: Check package.json
        run: cat package.json

      # Check pnpm settings
      - name: Check pnpm settings
        run: pnpm config list

      # Install dependencies
      - name: Install dependencies
        run: pnpm install --no-frozen-lockfile

      # Security audit
      - name: Security audit
        run: pnpm audit

      # Run Trivy vulnerability scanner
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          format: 'sarif'
          output: 'trivy-results.sarif'
          severity: 'CRITICAL,HIGH'

      # Upload Trivy scan results to GitHub Security tab
      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: 'trivy-results.sarif' 
