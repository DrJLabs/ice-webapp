# .github/workflows/codacy.yml
name: Codacy Security and Quality Analysis

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  codacy-analysis:
    name: Codacy Analysis
    runs-on: ubuntu-latest
    timeout-minutes: 15 # Add overall job timeout
    env:
      CODACY_TIMEOUT: 180 # 3 minutes timeout for Codacy operations
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # Install pnpm first
      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 8
          run_install: false

      # Setup Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '14.x'
          cache: 'pnpm'

      # Debug Node and PNPM versions
      - name: Debug versions
        run: |
          node -v
          pnpm -v
          echo "PNPM store path: $(pnpm store path)"

      # Install dependencies
      - name: Install dependencies
        run: pnpm install
        timeout-minutes: 5

      # Type checking
      - name: Type check
        run: pnpm run type-check
        timeout-minutes: 2

      # Linting
      - name: Lint
        run: pnpm run lint
        timeout-minutes: 2

      # Tests
      - name: Run tests
        run: pnpm run test --coverage
        timeout-minutes: 3

      # Prepare Codacy runtime
      - name: Prepare Codacy
        run: ./tools/codacy-runtime.sh
        timeout-minutes: 1

      # Configure Codacy quality gates
      - name: Configure Codacy Quality Gates
        run: pnpm run codacy:setup-all
        timeout-minutes: 2
        continue-on-error: true # Continue even if this step fails

      # Run Codacy Analysis with timeout wrapper
      - name: Codacy Static Analysis
        uses: codacy/codacy-analysis-cli-action@master
        with:
          project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}
          verbose: true
          output: results.sarif
          format: sarif
          gh-code-scanning-compat: true
          max-allowed-issues: 2147483647 # Don't fail on issues
        timeout-minutes: 5

      # Upload SARIF file
      - name: Upload Codacy SARIF to GitHub
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: results.sarif
        timeout-minutes: 1
        continue-on-error: true # Don't fail if upload fails

      # Setup code coverage report upload
      - name: Configure Codacy Quality Gates
        run: pnpm run codacy:setup-coverage
        timeout-minutes: 1
        continue-on-error: true # Continue even if this step fails

      # Upload coverage report
      - name: Upload coverage
        run: pnpm run coverage:upload
        timeout-minutes: 2
        continue-on-error: true # Continue even if this step fails

  security:
    name: security
    runs-on: ubuntu-latest
    timeout-minutes: 15 # Add overall job timeout
    env:
      CODACY_TIMEOUT: 180 # 3 minutes timeout for Codacy operations
    steps:
      - uses: actions/checkout@v4

      # Install pnpm first
      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 8
          run_install: false

      # Setup Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '14.x'
          cache: 'pnpm'

      # Debug Node and PNPM versions
      - name: Debug versions
        run: |
          node -v
          pnpm -v
          echo "PNPM store path: $(pnpm store path)"

      # Install dependencies
      - name: Install dependencies
        run: pnpm install
        timeout-minutes: 5

      # Security audit
      - name: Security audit
        run: pnpm audit
        timeout-minutes: 2
        continue-on-error: true # Don't fail if audit fails

      # Run Trivy vulnerability scanner
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          format: 'sarif'
          output: 'trivy-results.sarif'
          severity: 'CRITICAL,HIGH'
        timeout-minutes: 5

      # Upload Trivy scan results to GitHub Security tab
      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: 'trivy-results.sarif' 
        timeout-minutes: 1
        continue-on-error: true # Don't fail if upload fails 