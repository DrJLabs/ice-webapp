#!/usr/bin/env sh
. "$(dirname -- "$0")/_/husky.sh"

echo "üßä Running ICE-WEBAPP pre-push quality gates..."

# 1. Run tests with coverage
echo "Running tests with coverage..."
pnpm run test:coverage || { echo "‚ùå Tests failed!"; exit 1; }

# 2. Check coverage thresholds
# Extract coverage percentages from the output
echo "Checking coverage thresholds..."
COVERAGE_REPORT=$(cat coverage/coverage-summary.json)

# Extract coverage values (convert to integers by multiplying by 100)
LINES_COVERAGE=$(echo "$COVERAGE_REPORT" | grep -o '"lines":{"total":[0-9]*,"covered":[0-9]*,"skipped":[0-9]*,"pct":[0-9]*\.[0-9]*' | grep -o 'pct":[0-9]*\.[0-9]*' | cut -d':' -f2)
STATEMENTS_COVERAGE=$(echo "$COVERAGE_REPORT" | grep -o '"statements":{"total":[0-9]*,"covered":[0-9]*,"skipped":[0-9]*,"pct":[0-9]*\.[0-9]*' | grep -o 'pct":[0-9]*\.[0-9]*' | cut -d':' -f2)
FUNCTIONS_COVERAGE=$(echo "$COVERAGE_REPORT" | grep -o '"functions":{"total":[0-9]*,"covered":[0-9]*,"skipped":[0-9]*,"pct":[0-9]*\.[0-9]*' | grep -o 'pct":[0-9]*\.[0-9]*' | cut -d':' -f2)
BRANCHES_COVERAGE=$(echo "$COVERAGE_REPORT" | grep -o '"branches":{"total":[0-9]*,"covered":[0-9]*,"skipped":[0-9]*,"pct":[0-9]*\.[0-9]*' | grep -o 'pct":[0-9]*\.[0-9]*' | cut -d':' -f2)

# Required thresholds
LINES_THRESHOLD=70
STATEMENTS_THRESHOLD=70
FUNCTIONS_THRESHOLD=65
BRANCHES_THRESHOLD=60

# Convert decimals to integers for comparison (e.g., 75.5 -> 7550)
LINES_INT=$(echo "$LINES_COVERAGE * 100" | bc | cut -d'.' -f1)
STATEMENTS_INT=$(echo "$STATEMENTS_COVERAGE * 100" | bc | cut -d'.' -f1)
FUNCTIONS_INT=$(echo "$FUNCTIONS_COVERAGE * 100" | bc | cut -d'.' -f1)
BRANCHES_INT=$(echo "$BRANCHES_COVERAGE * 100" | bc | cut -d'.' -f1)

LINES_THRESHOLD_INT=$(echo "$LINES_THRESHOLD * 100" | bc)
STATEMENTS_THRESHOLD_INT=$(echo "$STATEMENTS_THRESHOLD * 100" | bc)
FUNCTIONS_THRESHOLD_INT=$(echo "$FUNCTIONS_THRESHOLD * 100" | bc)
BRANCHES_THRESHOLD_INT=$(echo "$BRANCHES_THRESHOLD * 100" | bc)

FAILED=0

# Check if coverage meets thresholds
if [ "$LINES_INT" -lt "$LINES_THRESHOLD_INT" ]; then
  echo "‚ùå Lines coverage ($LINES_COVERAGE%) is below threshold ($LINES_THRESHOLD%)"
  FAILED=1
fi

if [ "$STATEMENTS_INT" -lt "$STATEMENTS_THRESHOLD_INT" ]; then
  echo "‚ùå Statements coverage ($STATEMENTS_COVERAGE%) is below threshold ($STATEMENTS_THRESHOLD%)"
  FAILED=1
fi

if [ "$FUNCTIONS_INT" -lt "$FUNCTIONS_THRESHOLD_INT" ]; then
  echo "‚ùå Functions coverage ($FUNCTIONS_COVERAGE%) is below threshold ($FUNCTIONS_THRESHOLD%)"
  FAILED=1
fi

if [ "$BRANCHES_INT" -lt "$BRANCHES_THRESHOLD_INT" ]; then
  echo "‚ùå Branches coverage ($BRANCHES_COVERAGE%) is below threshold ($BRANCHES_THRESHOLD%)"
  FAILED=1
fi

# 3. Upload coverage to Codacy
echo "Uploading coverage to Codacy..."
pnpm run coverage:upload || echo "‚ö†Ô∏è Coverage upload failed, but continuing..."

if [ "$FAILED" -eq 1 ]; then
  echo "‚ùå Coverage check failed! Please add more tests to improve coverage."
  exit 1
fi

echo "‚úÖ All coverage thresholds passed!" 